<?php
defined('TASK') or exit('Access denied');

class Tasks_Controller extends Base
{
    protected $tasks;
    protected $navigation;
    protected $option = 'view';
    protected $type_img;//тип изображения
    protected $preview = false;
    protected $preview_task;
    protected $message;

    protected function input($param = array())
    {
        parent::input(); // TODO: Change the autogenerated stub
        $this->title .= "Главная";
        if (stristr($_SERVER['HTTP_REFERER'], 'edittasks') === 'edittasks') {
            $_SESSION['header_location'] = 'edittasks';
        }

        if (isset($param['page'])) {
            $page = $this->clear_int($param['page']);
            if ($page == 0) {
                $page = 1;
            }
        } else {
            $page = 1;
        }

        $pager = new Pager(
            $page,
            'tasks',
            array(),
            'task_id',
            'ASC',
            QUANTITY,
            QUANTITY_LINKS
        );

        if (is_object($pager)) {
            $this->navigation = $pager->get_navigation();
            $this->tasks = $pager->get_posts();
        }

        if ($param['option'] == 'add') {
            $this->option = 'add';
        }

        if ($this->is_post()) {
            $arr = [];
            if (isset($_POST['data'])) {
                foreach ($_POST['data'] as $value)
                    $arr[$value['name']] = $value['value'];
            }

            if (isset($_POST['edit_task']) && !isset($_POST['submit_add_cat'])) {
                $this->option = 'add';
                return;
            }

            if (!empty($_POST['user_name']) &&
                !empty($_POST['email']) &&
                !empty($_POST['text'])
            ) {
                $user_name = $_POST['user_name'];
                $email = $_POST['email'];
                $text = $_POST['text'];
            } elseif (!empty($arr['user_name']) &&
                !empty($arr['email']) &&
                !empty($arr['text'])
            ) {

                $user_name = $arr['user_name'];
                $email = $arr['email'];
                $text = $arr['text'];
            } else {
                $user_name = $_SESSION['add_task']['user_name'];
                $email = $_SESSION['add_task']['email'];
                $text = $_SESSION['add_task']['text'];
            }

            if (!empty($user_name) && !empty($email) && !empty($text)) {
                $_SESSION['add_task']['user_name'] = $user_name;
                $_SESSION['add_task']['email'] = $email;
                $_SESSION['add_task']['text'] = $text;

                if (!empty($_POST['img'])) {
                    $img = $_POST['img'];
                    $pos = strripos($img, '/');
                    $img = substr($img, $pos + 1);
                } elseif (empty($_FILES['img']['tmp_name'])) {
                    if (!empty($_POST['img_add'])) {
                        $img = $_POST['img_add'];
                        $pos = strripos($img, '/');
                        $img = substr($img, $pos + 1);
                    } else {
                        $img = NOIMAGE;
                    }
                } else {
                    if (!empty($_FILES['img']['error'])) {
                        $_SESSION['message'] = "Слишком большое изображение";
                        header("Location:" . SITE_URL . 'tasks/option/add/');
                        exit();
                    }

                    $img_types = array('jpeg' => 'image/jpeg', 'png' => 'image/png', 'gif' => 'image/gif');
                    $this->type_img = array_search($_FILES['img']['type'], $img_types);
                    if (!$this->type_img) {
                        $_SESSION['message'] = "Не правильный формат изображения";
                        header("Location:" . SITE_URL . 'tasks/option/add/');
                        exit();
                    }
                    if ($_FILES['img']['size'] > (2 * 1024 * 1024)) {
                        $_SESSION['message'] = "Слишком большое изображение";
                        header("Location:" . SITE_URL . 'tasks/option/add/');
                        exit();
                    }

                    if (!move_uploaded_file($_FILES['img']['tmp_name'], UPLOAD_DIR . $_FILES['img']['name'])) {
                        $_SESSION['message'] = "Ошибка копирования изображения";
                        header("Location:" . SITE_URL . 'tasks');
                        exit();
                    }

                    $res_img = $this->img_resize(UPLOAD_DIR . $_FILES['img']['name'], $this->type_img);

                    if ($res_img !== FALSE) {
                        $img = $res_img;
                        $_SESSION['add_task']['img'] = $img;
                        unlink(UPLOAD_DIR . $_FILES['img']['name']);
                    } else {
                        $_SESSION['message'] = "Ошибка изменения размера изображения";
                        header("Location:" . SITE_URL . 'tasks/option/add/');
                        exit();
                    }

                }

                if (isset($arr['preview_task']) || isset($_POST['preview_task']) && !isset($_POST['submit_add_cat'])) {
                    $this->preview = true;
                    $this->option = 'add';
                    return;
                }

                if ($this->option == 'add') {
                    $result = $this->ob_m->add_task(
                        $user_name,
                        $email,
                        $text,
                        $img
                    );

                    if ($result === TRUE) {
                        $_SESSION['message'] = "Task is successfully added";
                        unset($_SESSION['add_task']);
                    } else {
                        $_SESSION['message'] = "Ошибка добавления задачи";
                    }
                    $header_location = isset($_SESSION['header_location']) ? $_SESSION['header_location'] : 'tasks';
                    unset($_SESSION['header_location']);
                    header("Location:" . SITE_URL . $header_location);
                    exit();
                }
            } else {
                $_SESSION['message'] = "Заполните обязательные поля(имя пользователя, email, текст задачи)";
                header("Location:" . SITE_URL . 'tasks');
                exit();
            }
        }
        $this->message = $_SESSION['message'];
    }

    protected function output()
    {
        if ($this->option == 'view') {
            $this->content = $this->render(VIEW . 'tasks_page', array(
                'tasks' => $this->tasks,
                'navigation' => $this->navigation,
                'mes' => $this->message,
            ));
        }

        if ($this->option == 'add' && !$this->preview) {
            $this->content = $this->render(VIEW . 'add_task', array(
                'option' => $this->option,
                'preview_task' => $this->preview_task,
            ));
        }

        if ($this->option == 'add' && $this->preview) {
            $this->content = $this->render(VIEW . 'preview_task', array(
                'option' => $this->option,
                'preview' => $this->preview,
                'preview_task' => $this->preview_task,

            ));
        }

        $this->page = parent::output();
        unset($_SESSION['message']);
        return $this->page;

    }
}